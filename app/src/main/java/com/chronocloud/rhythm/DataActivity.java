package com.chronocloud.rhythm;

import com.chronocloud.rhythm.view.MMsurface;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;

public class DataActivity extends Activity{
	private boolean canRunningThread=true;
	private MMsurface surface;
	private String bl = "/071/071/071/071/071/071/071p038/071/072/071/072/071/071/077/071p038/071/071/071/071/071/071/071/071p038/071/071/071/074/072/071/078/080p038/071/081/072/071/072/071/071/071/071/071/071/072/079/080/084p042/083/077/081/075/078/085/074/073p042/074/071/077/077/071/071/071/071/071/071/071p045/071/071/071/071/071/071/071/071p045/071/071/073/072/074/073/077/072p045/071/071/071/071/071/071/071/071/071p049/071/071/071/071/071/073/071/071p049/074/072/071/071/071/073/071/071/071/071/071/071/071/071/071p052/074/071/071/071/071/071/071/073/083/086/072/071p055/071/071/071/071/071/071/071/075/072p055/071/071/071/071/071/071/071/071/071/071/071p056/071/073/087/088/077/072/071/071/071/071/071/071/071/071/071p061/071/071/071/071/071/071/071/071p061/072/071/073/080/085/087/077/072p061/071/071/071/071/071/071/071/071p063/071/071/071/071/073/071/072/071p063/071/077/072/071/087/091/097/090p063/071/071/071/071/071/071/071/071/071p068/071/071/071/071/071/073/095/093p068/084/081/071/075/082/077/100/099p068/082/082/071/071/071/071/071/071/071p071/084/096/103/079/071/071/071/071/071/071/071/071/071p078/071/071/180/223/306/320/326/312p078/283/265/208/200/201/191/216/211p078/163/122/071/071/071/071/071/071/071p074/071/071/071/071/071/071/071/071p074/080/082/088/099/099/096/099/093p074/100/103/121/143/166/172/206/185p074/102/071/071/071/071/071/071/071/071p083/071/071/071/071/096/114/139/145p083/150/153/154/153/157/151/145/141p083/117/112/088/080/073/081/101/111p083/102/095/078/076/080/091/142/130p083/071/071/071/071/071/071/071/071p091/071/071/071/071/089/109/154/171p091/214/214/222/208/188/196/221/231p091/225/208/263/251/100/071/071/071/071/071/071/071/071p095/071/071/071/071/167/198/248/252p095/245/230/187/173/132/120/091/084p095/071/071/071/071/071/071/071/071p088/071/122/269/262/153/096/071/071/071/071/071/071/071p100/071/071/071/071/071/071/128/142p100/163/174/183/180/192/188/178/175p100/151/139/115/113/112/106/076/071/071/071/071/071/071/071p091/071/071/071/071/071/071/071/071p091/071/071/071/071/071/071/099/113p091/153/176/176/177/129/093/071/071/071/071/071/071/071p103/071/071/071/071/071/071/071/071p103/071/071/071/073/087/096/116/116p103/130/141/165/160/160/165/158/151p103/148/144/110/105/097/087/086/072p103/071/073/071/081p000g/100/067/094";
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		surface = new MMsurface(this);
		setContentView(surface);
		surfacing();
	}

	private void surfacing() {
		// TODO Auto-generated method stub
		AsyncTask<Void, Void, Void> execute = new AsyncTask<Void, Void, Void>() {

			@Override
			protected Void doInBackground(Void... params) {
				// TODO Auto-generated method stub
				inThread();
				return null;
			}

		}.execute();
	}
	private void inThread(){
		String[] contents = bl.split("/");
		for (int i = 1; i < contents.length; i++) {
			if (canRunningThread==false) {
				System.out.println("???????????????????????????????");
				return;
			}
			String m = contents[i];
			try {
				Thread.sleep(55L);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			if (m.indexOf("p") != -1) {
				m = m.substring(0, 3);
				surface.setNumber2Zero(280);
				surface.showSingle(Integer.parseInt(m));
			}
		}
	}
	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		canRunningThread=false;
		super.onPause();
	}
}
